---
- name: Allow seed job to run without manual approval
  copy:
    src: javaposse.jobdsl.plugin.GlobalJobDslSecurityConfiguration.xml
    dest: "{{jenkins_home_dir}}/javaposse.jobdsl.plugin.GlobalJobDslSecurityConfiguration.xml"
  notify: restart jenkins
  tags:
    - setup

- name: Get list of jobs
  uri:
    user: "{{jenkins_admin_user}}"
    password: "{{jenkins_admin_password}}"
    force_basic_auth: yes
    url: "{{jenkins_local_url}}/api/json?tree=jobs[name]"
    return_content: yes
  register: jenkins_jobs
  until: jenkins_jobs.content.find('Please wait while Jenkins is getting ready to work') == -1
  retries: 10
  delay: 5
  tags:
    - setup

- name: Check if seed job exists
  set_fact:
    jenkins_seed_job_exists: "{{ seed_job_name in (jenkins_jobs.content|from_json).jobs|map(attribute='name')|list }}"
  tags:
    - setup

- name: Create seed job
  uri:
    user: "{{jenkins_admin_user}}"
    password: "{{jenkins_admin_password}}"
    force_basic_auth: yes
    url: "{{jenkins_local_url}}/createItem?name={{seed_job_name}}&{{jenkins_crumb_token}}"
    method: POST
    headers:
      Content-Type: application/xml
    body: "{{ lookup('template', seed_job_template) }}"
  register: jenkins_seed_job_updated
  when: not jenkins_seed_job_exists
  tags:
    - setup

- name: Update seed job
  uri:
    user: "{{jenkins_admin_user}}"
    password: "{{jenkins_admin_password}}"
    force_basic_auth: yes
    url: "{{jenkins_local_url}}/job/{{seed_job_name}}/config.xml?{{jenkins_crumb_token}}"
    method: POST
    headers:
      Content-Type: application/xml
    body: "{{ lookup('template', seed_job_template) }}"
  register: jenkins_seed_job_updated
  when: jenkins_seed_job_exists
  tags:
    - setup
